
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8643E74F7C44C685BAC4650ADA457860'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,51,52,53,54,55,56,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,85,89,95,96,97,98,99,100,104,105,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,134,135,142,143,144,151,152,153,154,156,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,48,52,-35,-36,-37,-38,52,52,52,15,-59,-60,-61,-62,-63,-2,52,52,52,52,52,52,52,52,52,15,52,-36,-58,52,52,52,52,52,-49,-48,-50,-51,-53,15,-40,-41,-42,-43,-44,-45,-46,-47,-28,52,-39,-32,52,-34,-52,-54,-15,-18,-19,-20,-56,-57,15,52,52,52,52,52,52,15,-72,-73,-74,-75,52,-29,-30,-33,-17,-55,15,52,-31,-16,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,30,31,32,33,34,35,36,47,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,112,113,114,121,122,123,124,125,135,142,143,144,151,152,154,156,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,17,-59,-60,-61,-62,-63,-2,17,-36,-58,-49,-48,-50,-51,-53,17,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-56,-57,17,17,-72,-73,-74,-75,-29,-30,-33,-17,-55,17,-31,-16,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,30,31,32,33,34,35,36,47,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,112,113,114,121,122,123,124,125,135,142,143,144,151,152,154,156,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,18,-59,-60,-61,-62,-63,-2,18,-36,-58,-49,-48,-50,-51,-53,18,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-56,-57,18,18,-72,-73,-74,-75,-29,-30,-33,-17,-55,18,-31,-16,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,30,31,32,33,34,35,36,47,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,112,113,114,121,122,123,124,125,135,142,143,144,151,152,154,156,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,20,-59,-60,-61,-62,-63,-2,20,-36,-58,-49,-48,-50,-51,-53,20,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-56,-57,20,20,-72,-73,-74,-75,-29,-30,-33,-17,-55,20,-31,-16,]),'(':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,51,52,53,54,55,56,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,80,81,82,84,89,95,96,97,98,99,100,104,105,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,135,142,143,144,151,152,153,154,156,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,49,19,53,-35,-36,-37,-38,19,19,19,-59,-60,-61,-62,-63,-2,19,19,19,19,19,19,19,19,19,19,19,-36,-58,19,19,19,19,19,-49,-48,-50,-51,-53,19,-40,-41,-42,-43,-44,-45,-46,-47,107,108,109,-28,-39,-32,19,-34,-52,-54,-15,-18,-19,-20,-56,-57,19,19,19,19,19,19,19,19,-72,-73,-74,-75,-29,-30,-33,-17,-55,19,19,-31,-16,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,30,31,32,33,34,35,36,47,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,112,113,114,121,122,123,124,125,135,142,143,144,151,152,154,156,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,26,-59,-60,-61,-62,-63,-2,26,-36,-58,-49,-48,-50,-51,-53,26,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-56,-57,26,26,-72,-73,-74,-75,-29,-30,-33,-17,-55,26,-31,-16,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,30,31,32,33,34,35,36,47,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,112,113,114,121,122,123,124,125,135,142,143,144,151,152,154,156,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,27,-59,-60,-61,-62,-63,-2,27,-36,-58,-49,-48,-50,-51,-53,27,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-56,-57,27,27,-72,-73,-74,-75,-29,-30,-33,-17,-55,27,-31,-16,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,30,31,32,33,34,35,36,47,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,112,113,114,121,122,123,124,125,135,142,143,144,151,152,154,156,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,28,-59,-60,-61,-62,-63,-2,28,-36,-58,-49,-48,-50,-51,-53,28,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-56,-57,28,28,-72,-73,-74,-75,-29,-30,-33,-17,-55,28,-31,-16,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,30,31,32,33,34,35,36,47,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,112,113,114,121,122,123,124,125,135,142,143,144,151,152,154,156,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,29,-59,-60,-61,-62,-63,-2,29,-36,-58,-49,-48,-50,-51,-53,29,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-56,-57,29,29,-72,-73,-74,-75,-29,-30,-33,-17,-55,29,-31,-16,]),'{':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,30,31,32,33,34,35,36,47,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,112,113,114,121,122,123,124,125,135,142,143,144,151,152,154,156,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,30,-59,-60,-61,-62,-63,-2,30,-36,-58,-49,-48,-50,-51,-53,30,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-56,-57,30,30,-72,-73,-74,-75,-29,-30,-33,-17,-55,30,-31,-16,]),'-':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,21,22,23,24,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,84,87,88,89,91,92,93,94,95,96,97,98,99,100,104,105,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,151,152,153,154,155,156,],[25,25,-3,-4,-5,-6,-7,38,-9,-10,-11,-12,-13,-14,-58,-64,25,-35,-36,-37,-38,25,25,25,-59,-60,-61,-62,-63,-2,25,25,25,25,25,25,25,25,25,25,25,38,-36,-58,25,25,25,25,25,-49,-48,38,-35,-50,-51,38,-53,25,-40,-41,-42,-43,-44,-45,-46,-47,38,-28,-36,38,-39,38,38,38,38,-32,25,-34,-52,-54,-15,-18,-19,-20,-56,-57,25,25,25,25,25,25,25,25,-72,-73,-74,-75,38,-29,38,38,38,38,38,38,-30,-33,-17,-55,25,25,-31,38,-16,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,21,22,23,24,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,51,52,53,54,55,56,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,84,89,95,96,97,98,99,100,104,105,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,129,135,142,143,144,151,152,153,154,156,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,34,-35,-36,-37,-38,34,34,34,-59,-60,-61,-62,-63,-2,34,34,34,34,34,34,34,34,34,34,34,-36,-58,34,34,34,34,34,-49,-48,-50,-51,-53,34,-40,-41,-42,-43,-44,-45,-46,-47,34,-28,-39,-32,34,-34,-52,-54,-15,-18,-19,-20,-56,-57,34,34,34,34,34,34,34,34,-72,-73,-74,-75,34,34,-29,-30,-33,-17,-55,34,34,-31,-16,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,21,22,23,24,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,51,52,53,54,55,56,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,84,89,95,96,97,98,99,100,104,105,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,129,135,142,143,144,151,152,153,154,156,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,35,-35,-36,-37,-38,35,35,35,-59,-60,-61,-62,-63,-2,35,35,35,35,35,35,35,35,35,35,35,-36,-58,35,35,35,35,35,-49,-48,-50,-51,-53,35,-40,-41,-42,-43,-44,-45,-46,-47,35,-28,-39,-32,35,-34,-52,-54,-15,-18,-19,-20,-56,-57,35,35,35,35,35,35,35,35,-72,-73,-74,-75,35,35,-29,-30,-33,-17,-55,35,35,-31,-16,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,21,22,23,24,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,84,85,89,95,96,97,98,99,100,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,129,134,135,142,143,144,151,152,153,154,156,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,16,-35,-36,-37,-38,16,16,16,-59,-60,-61,-62,-63,-2,16,16,16,16,16,16,16,16,16,83,16,16,-36,-58,16,16,16,16,16,-49,-48,-50,-51,-53,16,-40,-41,-42,-43,-44,-45,-46,-47,16,-28,16,-39,-32,16,-34,-52,-54,-15,-18,-19,-20,130,131,132,133,-56,-57,16,16,16,16,16,16,16,16,-72,-73,-74,-75,16,16,16,-29,-30,-33,-17,-55,16,16,-31,-16,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,31,32,33,34,35,36,51,52,58,59,62,63,65,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,122,123,124,125,135,142,143,144,154,156,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,-2,-36,-58,-49,-48,-50,-51,-53,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-72,-73,-74,-75,-29,-30,-33,-17,-31,-16,]),'}':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,31,32,33,34,35,36,51,52,58,59,62,63,65,66,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,122,123,124,125,135,142,143,144,154,156,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,-2,-36,-58,-49,-48,-50,-51,-53,99,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-72,-73,-74,-75,-29,-30,-33,-17,-31,-16,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,31,32,33,34,35,51,52,58,59,62,63,65,67,68,69,70,71,72,73,74,84,89,95,97,98,99,100,104,105,106,122,123,124,125,135,142,143,144,154,156,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,-36,-58,-49,-48,-50,-51,-53,-40,-41,-42,-43,-44,-45,-46,-47,-28,-39,-32,-34,-52,-54,-15,-18,-19,-20,-72,-73,-74,-75,-29,152,-33,-17,-31,-16,]),'+':([8,15,16,21,22,23,24,31,32,33,34,35,50,51,52,58,59,60,61,64,67,68,69,70,71,72,73,74,75,87,88,89,91,92,93,94,126,136,137,138,139,140,141,155,],[37,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,37,-36,-58,-49,-48,37,-35,37,-40,-41,-42,-43,-44,-45,-46,-47,37,-36,37,-39,37,37,37,37,37,37,37,37,37,37,37,37,]),'*':([8,15,16,21,22,23,24,31,32,33,34,35,50,51,52,58,59,60,61,64,67,68,69,70,71,72,73,74,75,87,88,89,91,92,93,94,126,136,137,138,139,140,141,155,],[39,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,39,-36,-58,-49,-48,39,-35,39,39,39,-42,-43,39,39,-46,-47,39,-36,39,-39,39,39,39,39,39,39,39,39,39,39,39,39,]),'/':([8,15,16,21,22,23,24,31,32,33,34,35,50,51,52,58,59,60,61,64,67,68,69,70,71,72,73,74,75,87,88,89,91,92,93,94,126,136,137,138,139,140,141,155,],[40,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,40,-36,-58,-49,-48,40,-35,40,40,40,-42,-43,40,40,-46,-47,40,-36,40,-39,40,40,40,40,40,40,40,40,40,40,40,40,]),'DOTMINUS':([8,15,16,21,22,23,24,31,32,33,34,35,50,51,52,58,59,60,61,64,67,68,69,70,71,72,73,74,75,87,88,89,91,92,93,94,126,136,137,138,139,140,141,155,],[41,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,41,-36,-58,-49,-48,41,-35,41,-40,-41,-42,-43,-44,-45,-46,-47,41,-36,41,-39,41,41,41,41,41,41,41,41,41,41,41,41,]),'DOTPLUS':([8,15,16,21,22,23,24,31,32,33,34,35,50,51,52,58,59,60,61,64,67,68,69,70,71,72,73,74,75,87,88,89,91,92,93,94,126,136,137,138,139,140,141,155,],[42,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,42,-36,-58,-49,-48,42,-35,42,-40,-41,-42,-43,-44,-45,-46,-47,42,-36,42,-39,42,42,42,42,42,42,42,42,42,42,42,42,]),'DOTMULTIPLE':([8,15,16,21,22,23,24,31,32,33,34,35,50,51,52,58,59,60,61,64,67,68,69,70,71,72,73,74,75,87,88,89,91,92,93,94,126,136,137,138,139,140,141,155,],[43,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,43,-36,-58,-49,-48,43,-35,43,43,43,-42,-43,43,43,-46,-47,43,-36,43,-39,43,43,43,43,43,43,43,43,43,43,43,43,]),'DOTDIVIDE':([8,15,16,21,22,23,24,31,32,33,34,35,50,51,52,58,59,60,61,64,67,68,69,70,71,72,73,74,75,87,88,89,91,92,93,94,126,136,137,138,139,140,141,155,],[44,-58,-64,-35,-36,-37,-38,-59,-60,-61,-62,-63,44,-36,-58,-49,-48,44,-35,44,44,44,-42,-43,44,44,-46,-47,44,-36,44,-39,44,44,44,44,44,44,44,44,44,44,44,44,]),'=':([15,48,150,],[45,85,153,]),'[':([15,45,],[46,76,]),'PLUSEQUAL':([15,22,],[-58,54,]),'MINUSEQUAL':([15,22,],[-58,55,]),'MULTIPLEEQUAL':([15,22,],[-58,56,]),'DIVIDEEQUAL':([15,22,],[-58,57,]),"'":([15,22,51,52,87,],[-58,58,58,-58,58,]),')':([16,21,23,24,31,32,33,34,35,50,51,52,58,59,67,68,69,70,71,72,73,74,86,87,89,90,130,131,132,136,137,138,139,140,141,],[-64,-35,-37,-38,-59,-60,-61,-62,-63,89,-36,-58,-49,-48,-40,-41,-42,-43,-44,-45,-46,-47,114,-65,-39,121,147,148,149,-66,-67,-68,-69,-70,-71,]),';':([16,21,23,24,27,28,29,31,32,33,34,35,51,52,58,59,60,61,64,67,68,69,70,71,72,73,74,75,77,78,79,89,91,92,93,94,101,102,103,126,127,145,146,147,148,149,155,],[-64,-35,-37,-38,62,63,65,-59,-60,-61,-62,-63,-36,-58,-49,-48,95,97,98,-40,-41,-42,-43,-44,-45,-46,-47,100,104,105,106,-39,122,123,124,125,128,-24,-26,143,144,-25,-27,-21,-22,-23,156,]),',':([16,21,23,24,31,32,33,34,35,51,52,58,59,60,61,67,68,69,70,71,72,73,74,83,89,102,103,145,146,],[-64,-35,-37,-38,-59,-60,-61,-62,-63,-36,-58,-49,-48,96,-35,-40,-41,-42,-43,-44,-45,-46,-47,110,-39,129,-26,129,-27,]),'EQUAL':([16,21,23,24,31,32,33,34,35,51,52,58,59,67,68,69,70,71,72,73,74,87,88,89,],[-64,-35,-37,-38,-59,-60,-61,-62,-63,-36,-58,-49,-48,-40,-41,-42,-43,-44,-45,-46,-47,-36,115,-39,]),'<':([16,21,23,24,31,32,33,34,35,51,52,58,59,67,68,69,70,71,72,73,74,87,88,89,],[-64,-35,-37,-38,-59,-60,-61,-62,-63,-36,-58,-49,-48,-40,-41,-42,-43,-44,-45,-46,-47,-36,116,-39,]),'>':([16,21,23,24,31,32,33,34,35,51,52,58,59,67,68,69,70,71,72,73,74,87,88,89,],[-64,-35,-37,-38,-59,-60,-61,-62,-63,-36,-58,-49,-48,-40,-41,-42,-43,-44,-45,-46,-47,-36,117,-39,]),'ISLESSOREQUAL':([16,21,23,24,31,32,33,34,35,51,52,58,59,67,68,69,70,71,72,73,74,87,88,89,],[-64,-35,-37,-38,-59,-60,-61,-62,-63,-36,-58,-49,-48,-40,-41,-42,-43,-44,-45,-46,-47,-36,118,-39,]),'ISMOREOREQUAL':([16,21,23,24,31,32,33,34,35,51,52,58,59,67,68,69,70,71,72,73,74,87,88,89,],[-64,-35,-37,-38,-59,-60,-61,-62,-63,-36,-58,-49,-48,-40,-41,-42,-43,-44,-45,-46,-47,-36,119,-39,]),'ISNOTEQUAL':([16,21,23,24,31,32,33,34,35,51,52,58,59,67,68,69,70,71,72,73,74,87,88,89,],[-64,-35,-37,-38,-59,-60,-61,-62,-63,-36,-58,-49,-48,-40,-41,-42,-43,-44,-45,-46,-47,-36,120,-39,]),']':([16,31,32,33,34,35,101,102,103,133,145,146,],[-64,-59,-60,-61,-62,-63,127,-24,-26,150,-25,-27,]),':':([16,52,111,112,113,],[-64,-58,134,-56,-57,]),'ZEROS':([45,],[80,]),'ONES':([45,],[81,]),'EYE':([45,],[82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,30,],[2,66,]),'instruction':([0,2,30,47,66,114,121,152,],[3,36,3,84,36,135,142,154,]),'assignment':([0,2,30,47,66,114,121,152,],[4,4,4,4,4,4,4,4,]),'for_instruction':([0,2,30,47,66,114,121,152,],[5,5,5,5,5,5,5,5,]),'while_instruction':([0,2,30,47,66,114,121,152,],[6,6,6,6,6,6,6,6,]),'if_instruction':([0,2,30,47,66,114,121,152,],[7,7,7,7,7,7,7,7,]),'operation':([0,2,19,26,29,30,37,38,39,40,41,42,43,44,45,47,49,53,54,55,56,57,66,96,114,115,116,117,118,119,120,121,152,153,],[8,8,50,60,64,8,67,68,69,70,71,72,73,74,75,8,88,88,91,92,93,94,8,126,8,136,137,138,139,140,141,8,8,155,]),'print_instruction':([0,2,30,47,66,114,121,152,],[9,9,9,9,9,9,9,9,]),'break_instruction':([0,2,30,47,66,114,121,152,],[10,10,10,10,10,10,10,10,]),'continue_instruction':([0,2,30,47,66,114,121,152,],[11,11,11,11,11,11,11,11,]),'return_instruction':([0,2,30,47,66,114,121,152,],[12,12,12,12,12,12,12,12,]),'compound_instruction':([0,2,30,47,66,114,121,152,],[13,13,13,13,13,13,13,13,]),'assignment_operation':([0,2,30,47,66,114,121,152,],[14,14,14,14,14,14,14,14,]),'num':([0,2,19,26,29,30,37,38,39,40,41,42,43,44,45,47,49,53,54,55,56,57,66,76,96,114,115,116,117,118,119,120,121,128,129,152,153,],[21,21,21,61,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,103,21,21,21,21,21,21,21,21,21,103,146,21,21,]),'id':([0,2,19,25,26,29,30,37,38,39,40,41,42,43,44,45,47,49,53,54,55,56,57,66,85,96,114,115,116,117,118,119,120,121,134,152,153,],[22,22,51,59,51,51,22,51,51,51,51,51,51,51,51,51,22,87,87,51,51,51,51,22,112,51,22,51,51,51,51,51,51,22,112,22,51,]),'unary_minus':([0,2,19,26,29,30,37,38,39,40,41,42,43,44,45,47,49,53,54,55,56,57,66,96,114,115,116,117,118,119,120,121,152,153,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'matrix_transposition':([0,2,19,26,29,30,37,38,39,40,41,42,43,44,45,47,49,53,54,55,56,57,66,96,114,115,116,117,118,119,120,121,152,153,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'num_s':([0,2,19,26,29,30,37,38,39,40,41,42,43,44,45,47,49,53,54,55,56,57,66,76,96,114,115,116,117,118,119,120,121,128,129,152,153,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'num_f':([0,2,19,26,29,30,37,38,39,40,41,42,43,44,45,47,49,53,54,55,56,57,66,76,96,114,115,116,117,118,119,120,121,128,129,152,153,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'num_i':([0,2,19,26,29,30,37,38,39,40,41,42,43,44,45,47,49,53,54,55,56,57,66,76,85,96,114,115,116,117,118,119,120,121,128,129,134,152,153,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,113,33,33,33,33,33,33,33,33,33,33,33,113,33,33,]),'iterator':([17,],[47,]),'zeros':([45,],[77,]),'ones':([45,],[78,]),'eye':([45,],[79,]),'bool_expression':([49,53,],[86,90,]),'rows':([76,],[101,]),'nums':([76,128,],[102,145,]),'int_or_id':([85,134,],[111,151,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','Mparser.py',32),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',36),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',37),
  ('instruction -> assignment','instruction',1,'p_instruction','Mparser.py',46),
  ('instruction -> for_instruction','instruction',1,'p_instruction','Mparser.py',47),
  ('instruction -> while_instruction','instruction',1,'p_instruction','Mparser.py',48),
  ('instruction -> if_instruction','instruction',1,'p_instruction','Mparser.py',49),
  ('instruction -> operation','instruction',1,'p_instruction','Mparser.py',50),
  ('instruction -> print_instruction','instruction',1,'p_instruction','Mparser.py',51),
  ('instruction -> break_instruction','instruction',1,'p_instruction','Mparser.py',52),
  ('instruction -> continue_instruction','instruction',1,'p_instruction','Mparser.py',53),
  ('instruction -> return_instruction','instruction',1,'p_instruction','Mparser.py',54),
  ('instruction -> compound_instruction','instruction',1,'p_instruction','Mparser.py',55),
  ('instruction -> assignment_operation','instruction',1,'p_instruction','Mparser.py',56),
  ('assignment -> ID = operation ;','assignment',4,'p_assignment','Mparser.py',60),
  ('assignment -> ID [ INT , INT ] = operation ;','assignment',9,'p_assignment','Mparser.py',61),
  ('assignment -> ID = [ rows ] ;','assignment',6,'p_assignment','Mparser.py',62),
  ('assignment -> ID = zeros ;','assignment',4,'p_assignment','Mparser.py',63),
  ('assignment -> ID = ones ;','assignment',4,'p_assignment','Mparser.py',64),
  ('assignment -> ID = eye ;','assignment',4,'p_assignment','Mparser.py',65),
  ('zeros -> ZEROS ( INT )','zeros',4,'p_zeros','Mparser.py',74),
  ('ones -> ONES ( INT )','ones',4,'p_ones','Mparser.py',78),
  ('eye -> EYE ( INT )','eye',4,'p_eye','Mparser.py',82),
  ('rows -> nums','rows',1,'p_rows','Mparser.py',86),
  ('rows -> rows ; nums','rows',3,'p_rows','Mparser.py',87),
  ('nums -> num','nums',1,'p_nums','Mparser.py',95),
  ('nums -> nums , num','nums',3,'p_nums','Mparser.py',96),
  ('for_instruction -> FOR iterator instruction','for_instruction',3,'p_for_instruction','Mparser.py',104),
  ('while_instruction -> WHILE ( bool_expression ) instruction','while_instruction',5,'p_while_instruction','Mparser.py',108),
  ('if_instruction -> IF ( bool_expression ) instruction','if_instruction',5,'p_if_instruction','Mparser.py',112),
  ('if_instruction -> IF ( bool_expression ) instruction ELSE instruction','if_instruction',7,'p_if_instruction','Mparser.py',113),
  ('print_instruction -> PRINT operation ;','print_instruction',3,'p_print_instruction','Mparser.py',120),
  ('print_instruction -> PRINT operation , operation ;','print_instruction',5,'p_print_instruction','Mparser.py',121),
  ('print_instruction -> PRINT num ;','print_instruction',3,'p_print_instruction','Mparser.py',122),
  ('operation -> num','operation',1,'p_operation','Mparser.py',129),
  ('operation -> id','operation',1,'p_operation','Mparser.py',130),
  ('operation -> unary_minus','operation',1,'p_operation','Mparser.py',131),
  ('operation -> matrix_transposition','operation',1,'p_operation','Mparser.py',132),
  ('operation -> ( operation )','operation',3,'p_operation','Mparser.py',133),
  ('operation -> operation + operation','operation',3,'p_operation','Mparser.py',134),
  ('operation -> operation - operation','operation',3,'p_operation','Mparser.py',135),
  ('operation -> operation * operation','operation',3,'p_operation','Mparser.py',136),
  ('operation -> operation / operation','operation',3,'p_operation','Mparser.py',137),
  ('operation -> operation DOTMINUS operation','operation',3,'p_operation','Mparser.py',138),
  ('operation -> operation DOTPLUS operation','operation',3,'p_operation','Mparser.py',139),
  ('operation -> operation DOTMULTIPLE operation','operation',3,'p_operation','Mparser.py',140),
  ('operation -> operation DOTDIVIDE operation','operation',3,'p_operation','Mparser.py',141),
  ('unary_minus -> - id','unary_minus',2,'p_unary_minus','Mparser.py',150),
  ("matrix_transposition -> id '",'matrix_transposition',2,'p_matrix_transposition','Mparser.py',154),
  ('break_instruction -> BREAK ;','break_instruction',2,'p_break_instruction','Mparser.py',159),
  ('continue_instruction -> CONTINUE ;','continue_instruction',2,'p_continue_instruction','Mparser.py',163),
  ('return_instruction -> RETURN operation ;','return_instruction',3,'p_return_instruction','Mparser.py',167),
  ('return_instruction -> RETURN ;','return_instruction',2,'p_return_instruction','Mparser.py',168),
  ('compound_instruction -> { instructions }','compound_instruction',3,'p_compound_instruction','Mparser.py',172),
  ('iterator -> ID = int_or_id : int_or_id','iterator',5,'p_iterator','Mparser.py',176),
  ('int_or_id -> id','int_or_id',1,'p_int_or_id','Mparser.py',180),
  ('int_or_id -> num_i','int_or_id',1,'p_int_or_id','Mparser.py',181),
  ('id -> ID','id',1,'p_id','Mparser.py',185),
  ('num -> num_s','num',1,'p_num','Mparser.py',189),
  ('num -> num_f','num',1,'p_num','Mparser.py',190),
  ('num -> num_i','num',1,'p_num','Mparser.py',191),
  ('num_s -> STRING','num_s',1,'p_num_s','Mparser.py',195),
  ('num_f -> FLOAT','num_f',1,'p_num_f','Mparser.py',199),
  ('num_i -> INT','num_i',1,'p_num_i','Mparser.py',203),
  ('bool_expression -> id','bool_expression',1,'p_bool_expression','Mparser.py',207),
  ('bool_expression -> operation EQUAL operation','bool_expression',3,'p_bool_expression','Mparser.py',208),
  ('bool_expression -> operation < operation','bool_expression',3,'p_bool_expression','Mparser.py',209),
  ('bool_expression -> operation > operation','bool_expression',3,'p_bool_expression','Mparser.py',210),
  ('bool_expression -> operation ISLESSOREQUAL operation','bool_expression',3,'p_bool_expression','Mparser.py',211),
  ('bool_expression -> operation ISMOREOREQUAL operation','bool_expression',3,'p_bool_expression','Mparser.py',212),
  ('bool_expression -> operation ISNOTEQUAL operation','bool_expression',3,'p_bool_expression','Mparser.py',213),
  ('assignment_operation -> id PLUSEQUAL operation ;','assignment_operation',4,'p_assignment_operation','Mparser.py',220),
  ('assignment_operation -> id MINUSEQUAL operation ;','assignment_operation',4,'p_assignment_operation','Mparser.py',221),
  ('assignment_operation -> id MULTIPLEEQUAL operation ;','assignment_operation',4,'p_assignment_operation','Mparser.py',222),
  ('assignment_operation -> id DIVIDEEQUAL operation ;','assignment_operation',4,'p_assignment_operation','Mparser.py',223),
]
